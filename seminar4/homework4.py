'''Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с
повторениями). Выдать без повторений в порядке возрастания все те числа, которые
встречаются в обоих наборах.
Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
элементов второго множества. Затем пользователь вводит сами элементы множеств.

11 6
2 4 6 8 10 12 10 8 6 4 2
3 6 9 12 15 18
6 12

'''

a = "2 4 6 8 10 12 10 8 6 4 2"
b = "3 6 9 12 15 18"
a_l = set(list(map(int, a.split())))
b_l = set(list(map(int, b.split())))

#print(result)
print(*sorted(a_l & b_l))



# n = int(input("Введите размер первого списка N= "))
# m = int(input("Введите размер первого списка M= "))

# numbers_n = [None] * n #set(list(map(int, input(f"Множество {n} элементов > ").split())))
# numbers_m = [None] * m #set(list(map(int, input(f"Множество {m} элементов > ").split())))
# for i in range(n):
#     numbers_n[i] = int(input(f"Введите {i + 1} элемент 1-го списка = "))
# print()
# for j in range(m):
#     numbers_m[j] = int(input(f"Введите {j + 1} элемент 2-го списка = "))
# set_n = set(numbers_n)
# set_m = set(numbers_m)

# print(sorted(set_n & set_m))

    
    
    

'''Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
круглой грядке, причем кусты высажены только по окружности. Таким образом, у
каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
выросло различное число ягод – на i-ом кусте выросло ai
 ягод.
В этом фермерском хозяйстве внедрена система автоматического сбора черники.
Эта система состоит из управляющего модуля и нескольких собирающих модулей.
Собирающий модуль за один заход, находясь непосредственно перед некоторым
кустом, собирает ягоды с этого куста и с двух соседних с ним.
Напишите программу для нахождения максимального числа ягод, которое может
собрать за один заход собирающий модуль, находясь перед некоторым кустом
заданной во входном файле грядки.

4 -> 1 2 3 4
9
'''

list_1 = [5, 5, 6, 4, 9]
print(list_1)
list_1[:0] = list_1[len(list_1) - 1:]
list_1.append(list_1[1])
print(list_1)
list_1[:0]
print(list_1)
max_b = 0
for i in range(1, len(list_1) - 1):
    max1 = list_1[i - 1] + list_1[i] + list_1[i + 1]
    if max1 > max_b:
        max_b = max1
  
print(max_b)



# berries = []
# n = int(input("N> ")) # berries = list(map(int, input(f"Введите ягоды для {n} кустов > ").split()))
# for i in range(n):
#     berries.append(int(input(f"Куст {i+1}: ")))

# max_sum = 0

# for i in range(len(berries)):
#     sum = berries[i]
#     left = (i-1) % n # 0-1%5 = -1, 1-1%5 = 0, 2-1%5 = 1, 3-1%5 = 2, 4-1%5 = 3, 5-1%5 = 4. При n==5
#     right = (i+1) % n
#     sum += berries[left] + berries[right] 
#     max_sum = max(max_sum, sum)

# print(max_sum)
